name: Semantic Release

on:
  push:
    branches:
      - main
  
jobs:    
  args:
    runs-on: ubuntu-latest
    outputs:
      commit-date: ${{ steps.ldflags.outputs.commit-date }}
      commit: ${{ steps.ldflags.outputs.commit }}
      version: ${{ steps.ldflags.outputs.version }}
      tree-state: ${{ steps.ldflags.outputs.tree-state }}
    steps:
      - id: checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.3.4
        with:
          fetch-depth: 0
      - id: ldflags
        run: |
          echo "commit-date=$(git log --date=iso8601-strict -1 --pretty=%ct)" >> "$GITHUB_OUTPUT"
          echo "commit=$GITHUB_SHA" >> "$GITHUB_OUTPUT"
          echo "version=$(git describe --tags --always --dirty | cut -c2-)" >> "$GITHUB_OUTPUT"
          echo "tree-state=$(if git diff --quiet; then echo "clean"; else echo "dirty"; fi)" >> "$GITHUB_OUTPUT"

  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Prepare prerelease semantic
        if: github.ref != 'refs/heads/main'
        run: mv .releaserc.prerelease.yaml .releaserc.yaml

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # SLSA builder job
  slsa-build:
    permissions:
      id-token: write # To sign the provenance.
      contents: write # To upload assets to release.
      actions: read # To read the workflow path.
    needs: 
      - semantic-release
      - args
    strategy:
      matrix:
        os:
          - linux
          - darwin
        arch:
          - amd64
          - arm64
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v2.0.0
    with:
      go-version: "1.23"
      config-file: .slsa-goreleaser/${{matrix.os}}-${{matrix.arch}}.yml
      evaluated-envs: "COMMIT_DATE:${{needs.args.outputs.commit-date}}, COMMIT:${{needs.args.outputs.commit}}, VERSION:${{needs.args.outputs.version}}, TREE_STATE:${{needs.args.outputs.tree-state}}"

  create-release:
    permissions:
      contents: write
    needs: 
      - slsa-build
      - semantic-release
    runs-on: ubuntu-latest
    steps:
      - name: Download SLSA build artifact
        uses: actions/download-artifact@v4
        with:
           pattern: teleport-plugin-kandji-device-syncer*
           merge-multiple: true

      - name: Upload binaries & attestation to release
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: "{{ needs.semantic-release.outputs.new_release_version }}"
          files: "teleport-plugin-kandji-device-syncer*"  # Adjust path as needed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
