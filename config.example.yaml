# Kandji-Teleport Integration Configuration Example
# Copy this file to config.yaml and update with your actual values

log:
  level: "INFO"  # valid log levels are: DEBUG, INFO, WARN, ERROR

# How often to run the sync process (e.g., 5m, 1h, 30s)
sync_interval: 5m

# on_missing configures what to do if a device is missing in Kandji but exists in Teleport
# Options: "ignore", "delete", "alert"
# "ignore" will leave the device in Teleport without changes
# "delete" will remove the device from Teleport if it is not found in Kandji
# "alert" will log an alert but leave the device in Teleport
# Default is "ignore" to prevent accidental deletions
on_missing: "delete"


# Kandji API Configuration
kandji:
  # Your Kandji instance API URL (replace 'your-tenant' with your actual tenant name)
  # Can also be passed by environment variable: KANDJI_API_URL
  api_url: "https://your-tenant.api.kandji.io"
  # Your Kandji API Token - NEVER commit real tokens to version control
  # Set this via environment variable KANDJI_API_TOKEN instead for security
  # Generate at: Kandji Admin Portal > Settings > API Token
  api_token: "${KANDJI_API_TOKEN}"

  # Devices that are tagged with these tags will be included in the sync
  # If include_tags is empty, all devices will be included
  # If exclude_tags is not empty, devices with these tags will be excluded
  # Note: Tags are case-sensitive
  include_tags: []
  exclude_tags: []

  # Blueprint filters
  # Similarly, you can filter blueprints by IDs or names
  blueprints_include:
    blueprint_ids: []
    blueprint_names: []
  blueprints_exclude:
    blueprint_ids: []
    blueprint_names: []

  # Sync settings for devices without owners
  # If true, devices without owners in Kandji will be synced to Teleport
  # If false, these devices will be ignored
  sync_mobile_devices: false
  sync_devices_without_owners: false

# Teleport Configuration
teleport:
  # Address of your Teleport proxy (include port if not 443)
  proxy_addr: "your-cluster.teleport.example.com:443"
  # Path to the identity file for tctl authentication
  # Generate with: tctl auth sign --format=identity --user=sync-service --out=identity.pem
  # This identity must have permissions to read and create devices
  # You can also set this via environment variable: TELEPORT_IDENTITY_FILE
  identity_file: "identity.pem"

# Rate limiting settings to prevent overwhelming APIs
rate_limits:
  # Maximum Kandji API requests per second
  kandji_requests_per_second: 10
  # Maximum Teleport API requests per second
  teleport_requests_per_second: 5
  # Burst capacity for both APIs
  burst_capacity: 5

# Batch processing settings for bulk operations
batch:
  # Number of devices to process in each batch
  size: 50

# Security Notes:
#
# 1. API Tokens: Use environment variables instead of hardcoding tokens
#    - Set KANDJI_API_TOKEN environment variable
#    - Remove the api_token line above when using env vars
#
# 2. File Permissions: Restrict access to this config file
#    - chmod 600 config.yaml
#    - Store in a secure location with limited access
#
# 3. Identity File: Ensure the Teleport identity file has minimal required permissions
#    - Should only have device read/create permissions
#    - Regularly rotate the identity certificate
#
